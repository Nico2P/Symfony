<?php

namespace OC\PlatformBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * AdvertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdvertRepository extends \Doctrine\ORM\EntityRepository
{

    public function getAdvertBefore(\DateTime $date)
    {
        return $this->createQueryBuilder('a')
        ->where('a.updatedAt <= :date')
        ->orWhere('a.updatedAt IS NULL AND a.date <= :date' )
        ->andWhere('a.applications IS EMPTY')
        ->setParameter('date', $date)
        ->getQuery()
        ->getResult()
        ;
    }

    public function getAdvertWithCategories(array $categoryNames)
    {
        $qb = $this->createQueryBuilder('a');
        $qb
            ->innerJoin('a.categories', 'c')
            ->addSelect('c')
        ;

        $qb->where($qb->expr()->in('c.name', $categoryNames));

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }

    public function getAdverts($page, $nbPerPage)
    {
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.image', "i")
            ->addSelect('i')
            ->leftJoin('a.categories', 'c')
            ->addSelect('c')
            ->orderBy('a.date', 'desc')
            ->getQuery()
            ;

        $query
            ->setFirstResult(($page-1)* $nbPerPage)
            ->setMaxResults($nbPerPage)
            ;

        return new Paginator($query, true);
    }


    protected function whereCurrentYear(QueryBuilder $qb)
    {
        $qb
            ->andWhere('a.date BETWEEN :start AND :end')
            ->setParameter('start', new \DateTime(date("Y") . '-01-01'))
            ->setParameter('end', new \DateTime(date("Y") . '-12-31'))
            ;
    }
}
